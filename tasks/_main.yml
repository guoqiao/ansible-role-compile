---

- name: gather facts
  tags: always
  setup:


- name: define pkgs
  tags: always
  set_fact:
    _extra_pkgs: "{{ _util_pkgs[ansible_pkg_mgr] + extra_pkgs[ansible_pkg_mgr] }}"
    _builddep_pkgs: "{{ builddep_pkgs[ansible_pkg_mgr] }}"

- name: apt builddep
  become: yes
  when: 'ansible_pkg_mgr == "apt"'
  tags: apt
  block:

    - name: apt install
      apt:
        update_cache: yes
        cache_valid_time: 3600
        state: latest
        name: "{{ _extra_pkgs }}"
      register: task
      retries: 3
      delay: 1
      until: task is success

    - name: define _source_url for ubuntu
      when: 'ansible_distribution == "Ubuntu"'
      set_fact:
        _source_url: http://archive.ubuntu.com/ubuntu/

    - name: define _source_url for debian
      when: 'ansible_distribution == "Debian"'
      set_fact:
        _source_url: http://deb.debian.org/debian

    - name: apt repository enable source pkgs
      apt_repository:
        repo: "deb-src {{ _source_url }} {{ ansible_distribution_release }} main"

    - name: apt-get build-dep
      apt:
        update_cache: yes
        cache_valid_time: 3600
        state: build-dep
        # apt.name support list, so no need to join
        name: "{{ _builddep_pkgs }}"
      register: task
      retries: 3
      delay: 1
      until: task is success


- name: yum builddep
  become: yes
  when: 'ansible_pkg_mgr == "yum"'
  tags: yum
  block:

    - name: remove yum.pid
      file:
        path: /var/run/yum.pid
        state: absent

    - name: yum install
      yum:
        update_cache: yes
        state: latest
        name: "{{ _extra_pkgs }}"
      register: task
      retries: 3
      delay: 1
      until: task is success

    - name: yum-builddep
      command: 'yum-builddep -y -q {{ _builddep_pkgs|join(" ") }}'


- name: dnf builddep
  become: yes
  when: 'ansible_pkg_mgr == "dnf"'
  tags: dnf
  block:

    - name: dnf install
      command: 'dnf install --assumeyes {{ _extra_pkgs|join(" ") }}'
      register: task
      retries: 3
      delay: 1
      until: task is success

    - name: dnf builddep
      command: 'dnf builddep --assumeyes {{ _builddep_pkgs|join(" ") }}'
      register: task
      retries: 3
      delay: 1
      until: task is success


- name: 'git clone -b {{ git_repo_version }} --depth {{ git_repo_depth }} {{ git_repo_url }} {{ git_repo_dest }}'
  tags: git-clone
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ git_repo_dest }}"
    version: "{{ git_repo_version }}"
    depth: "{{ git_repo_depth }}"

- name: chown repo tree
  become: yes
  file:
    path: "{{ git_repo_dest }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    recurse: yes

- name: link ld to ld.gold
  become: yes
  file:
    src: /usr/bin/ld.gold
    dest: /usr/bin/ld
    state: link
    force: yes

- name: create ld conf file
  become: yes
  copy:
    dest: /etc/ld.so.conf.d/ansbile-role-xbuild.conf
    content: |
      /usr/local/lib
      /usr/lib
      /lib

- name: 'run build commands in loop'
  become: yes
  shell: "{{ item }}"
  args:
    chdir: "{{ git_repo_dest }}"
  loop:
      - "{{ command_distclean }} || true"
      - "{{ command_configure }}"
      - "{{ command_compile }}"
      - "{{ command_install }}"
      - "{{ command_link }}"
      - "{{ command_check }}"
